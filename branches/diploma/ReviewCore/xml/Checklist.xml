<?xml version="1.0" encoding="UTF-8"?>
<checklist xmlns="http://review.bechclipse.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://review.bechclipse.org Checklist.xsd ">

  <scope name="Generel">
    <feature name="Build">
      <checkpoint>
        <question>Does the ant build complete successful?</question>
        <problem>The project does not build</problem>
        <solution>Repair the build</solution>
        <severity>HIGH</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>

    <feature name="Code standards">
      <checkpoint>
        <question>Does the code respect the code standard?</question>
        <problem>The code does not respect the code standard (http://java.sun.com/docs/codeconv/CodeConventions.pdf)</problem>
        <solution>Change the code so it respects the code standard </solution>
        <severity>LOW</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>

    <feature name="Warnings">
      <checkpoint>
        <question>Does IDE compilation contain warnings?</question>
        <problem>The code contains issues the IDE warns about. Warnings should be addressed</problem>
        <solution>Address every warning. Either refactor the code according to the warning or mark it as ignored if possible</solution>
        <severity>MEDIUM</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>

    <feature name="Code structure">
      <checkpoint>
        <question>Is the length of classes and methods appropriate</question>
        <problem>The length of classes and code is not appropriate</problem>
        <solution>Refactor code and break it down to smaller units</solution>
        <severity>LOW</severity>
        <category>WRONG</category>
      </checkpoint>

      <checkpoint>
        <question>Is the naming of variables, classes and methods appropriate and self-documenting</question>
        <problem>The naming of elements are not appropriate</problem>
        <solution>Rename the elements</solution>
        <severity>LOW</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>
  </scope>

  <scope name="Class">
    <feature name="Documentation">
      <checkpoint>
        <question>Is every class properly documented with JavaDoc at the class declaration?</question>
        <problem>The class is not properly documented. JavaDoc is missing at the class declaration</problem>
        <solution>Add JavaDoc documentation for the class declaration</solution>
        <severity>LOW</severity>
        <category>MISSING</category>
      </checkpoint>
    </feature>
  </scope>

  <scope name="Method">
    <feature name="Documentation">
      <checkpoint>
        <question>Is every public method properly documented with JavaDoc at the method declaration?</question>
        <problem>The method is not properly documented. JavaDoc is missing at the method declaration</problem>
        <solution>Add JavaDoc documentation for the method declaration</solution>
        <severity>LOW</severity>
        <category>MISSING</category>
      </checkpoint>
    </feature>

    <feature name="Unused elements">
      <checkpoint>
        <question>Are all public methods called</question>
        <problem>Public method is not called, hence unnecessary</problem>
        <solution>Delete method</solution>
        <severity>LOW</severity>
        <category>EXTRA</category>
      </checkpoint>
    </feature>

    <feature name="Constants">
      <checkpoint>
        <question>Are all possible constants values extracted to constant variables</question>
        <problem>Constant values are scattered around the code</problem>
        <solution>Extract constant values to constant variables</solution>
        <severity>MEDIUM</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>
  </scope>

  <scope name="Class">
    <feature name="Inheritance">
      <checkpoint>
        <question>If exist, is the inheritance appropriate?</question>
        <problem>Inheritance is not appropriate</problem>
        <solution>Change the inheritance</solution>
        <severity>MEDIUM</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>

    <feature name="Class constructor">
      <checkpoint>
        <question>If a call to super is required in the constructor, is it present?</question>
        <problem>Constructor should call super constructor but does not</problem>
        <solution>Call super constructor</solution>
        <severity>HIGH</severity>
        <category>MISSING</category>
      </checkpoint>
    </feature>
  </scope>

  <scope name="Method">
    <feature name="Error handling">
      <checkpoint>
        <question>Does the method include sufficient Exception handling</question>
        <problem>Exceptions is not handled</problem>
        <solution>Create Exception handling</solution>
        <severity>MEDIUM</severity>
        <category>MISSING</category>
      </checkpoint>

      <checkpoint>
        <question>Does the method include sufficient logging statements?</question>
        <problem>There is not added sufficient logging statements</problem>
        <solution>Add logging statements</solution>
        <severity>MEDIUM</severity>
        <category>MISSING</category>
      </checkpoint>

      <checkpoint>
        <question>Is the code protected against NullpointerException errors?</question>
        <problem>NullpointerExcption errors could occur</problem>
        <solution>Protect code against NullpointerException errors</solution>
        <severity>HIGH</severity>
        <category>WRONG</category>
      </checkpoint>
    </feature>
  </scope>

  <scope name="Generel">
    <feature name="Testability">
      <checkpoint>
        <question>Does code has a structure that supports unittesting? Is common patterns used?</question>
        <problem>Code does not have a structure that support isolated unittesting</problem>
        <solution>Refactor code. Use appropriate code patterns</solution>
        <severity>MEDIUM</severity>
        <category>WRONG</category>
      </checkpoint>

      <checkpoint>
        <question>Is test and production code separated?</question>
        <problem>No testing logic should exist in production code</problem>
        <solution>Refactor code and put testing logics in test source</solution>
        <severity>MEDIUM</severity>
        <category>WRONG</category>
      </checkpoint>

      <checkpoint>
        <question>Is the amount of Unit tests adequate?</question>
        <problem>There is not enough unit testing</problem>
        <solution>Add more unit testing or improve existing</solution>
        <severity>MEDIUM</severity>
        <category>MISSING</category>
      </checkpoint>
    </feature>

    <feature name="Design compliance">
      <checkpoint>
        <question>Does the functionality match the design documents?</question>
        <problem>The implementation is wrong</problem>
        <solution>Rewrite code to the functionality match the design documents</solution>
        <severity>HIGH</severity>
        <category>MISSING</category>
      </checkpoint>
    </feature>
  </scope>
</checklist>
